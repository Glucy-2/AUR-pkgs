# Run update.sh in each submodule folder
name: Update AUR packages

on:
  # schedule:
  #   - cron: '0 4 * * *'
  workflow_dispatch:
  push:
  pull_request:

env:
  AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}

jobs:
  checkout-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.checkout-packages.outputs.packages }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - id: checkout-packages
      name: Checkout package list
      run: |
        packages=$(grep -oP '(?<=\[submodule ").*?(?="\])' .gitmodules | jq -Rsc '[split("\n")[] | select(length > 0)]')
        echo "packages=${packages}" | tee -a $GITHUB_OUTPUT

  update:
    runs-on: ubuntu-latest
    needs: checkout-packages
    strategy:
      matrix:
        package-name: ${{fromJson(needs.checkout-packages.outputs.packages)}}
    steps:
    - name: Get AUR SSH host key
      id: get-aur-host-key
      run: echo "aur-host-key=$(ssh-keyscan aur.archlinux.org)" >> $GITHUB_OUTPUT
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: "ssh://aur@aur.archlinux.org/${{ matrix.package-name }}.git"
        ssh-key: ${{ secrets.AUR_SSH_KEY }}
        ssh-known-hosts: ${{ steps.get-aur-host-key.outputs.aur-host-key }}
        ssh-user: aur
    - name: Update package
      id: update-package
      run: |
        ./update.sh
