# Run update.sh in each submodule folder
name: Update AUR packages

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:
  push:
  pull_request:

env:
  AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}

jobs:
  checkout-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.checkout-packages.outputs.packages }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - id: checkout-packages
      name: Checkout package list
      run: |
        packages=$(grep -oP '(?<=\[submodule ").*?(?="\])' .gitmodules | jq -Rsc '[split("\n")[] | select(length > 0)]')
        echo "packages=${packages}" | tee -a $GITHUB_OUTPUT
  update:
    runs-on: ubuntu-latest
    needs: checkout-packages
    strategy:
      matrix:
        packages: ${{fromJson(needs.checkout-packages.outputs.packages)}}
    steps:
    - name: Setup SSH and Git
      run: |
        mkdir -p ~/.ssh
        echo "${AUR_SSH_KEY}" > ~/.ssh/aur
        chmod 600 ~/.ssh/aur
        ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
        git config --global user.email "glucy-2@outlook.com"
        git config --global user.name "aur"
        cat > ~/.ssh/config << EOF
        Host aur.archlinux.org
          IdentityFile ~/.ssh/aur
          User aur
        EOF
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Update
      run: |
        for package in ${{ matrix.packages }}; do
          cd $package
          ./update.sh
          cd ..
        done
